import Moo from 'moo';
import type { Token } from './tokens';
export * from './tokens';
export interface LexerState extends Moo.LexerState {
    offset: number;
}
export interface LexerIterable extends Iterable<[Token, LexerState]> {
}
/**
 * The lexing module of the parser.
 *
 * @category Lexer
 */
export interface Lexer {
    feed(chunk: string, state?: LexerState | null): LexerIterable;
}
/**
 * {@linkcode Lexer} factory
 *
 * @example
 * ```ts
 * import {createLexer} from '@tracespace/parser'
 *
 * const lexer = createLexer()
 * const tokens = lexer.feed('G04 gerber string*\nM02*\n')
 *
 * for (const token of tokens) {
 *   console.log(`${token.type}: ${token.value}`)
 * }
 * ```
 *
 * @category Lexer
 */
export declare function createLexer(): Lexer;
declare module 'moo' {
    interface Lexer {
        index?: number;
    }
}
