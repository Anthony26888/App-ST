(function(y,k){typeof exports=="object"&&typeof module<"u"?k(exports,require("@tracespace/parser"),require("@tracespace/plotter"),require("@tracespace/renderer"),require("@tracespace/xml-id"),require("@tracespace/identify-layers")):typeof define=="function"&&define.amd?define(["exports","@tracespace/parser","@tracespace/plotter","@tracespace/renderer","@tracespace/xml-id","@tracespace/identify-layers"],k):(y=typeof globalThis<"u"?globalThis:y||self,k(y.TracespaceCore={},y.TracespaceParser,y.TracespacePlotter,y.TracespaceRenderer,y.TracespaceXmlId,y.TracespaceIdentifyLayers))})(this,function(y,k,P,F,ee,b){"use strict";function U(n){const t=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(n){for(const l in n)if(l!=="default"){const e=Object.getOwnPropertyDescriptor(n,l);Object.defineProperty(t,l,e.get?e:{enumerable:!0,get:()=>n[l]})}}return t.default=n,Object.freeze(t)}const De=U(k),Me=U(P),I=U(F);class D{constructor(t,l,e){this.property=t,this.normal=l,e&&(this.space=e)}}D.prototype.property={},D.prototype.normal={},D.prototype.space=null;function ne(n,t){const l={},e={};let o=-1;for(;++o<n.length;)Object.assign(l,n[o].property),Object.assign(e,n[o].normal);return new D(l,e,t)}function M(n){return n.toLowerCase()}class v{constructor(t,l){this.property=t,this.attribute=l}}v.prototype.space=null,v.prototype.boolean=!1,v.prototype.booleanish=!1,v.prototype.overloadedBoolean=!1,v.prototype.number=!1,v.prototype.commaSeparated=!1,v.prototype.spaceSeparated=!1,v.prototype.commaOrSpaceSeparated=!1,v.prototype.mustUseProperty=!1,v.prototype.defined=!1;let Re=0;const p=C(),m=C(),te=C(),i=C(),g=C(),N=C(),S=C();function C(){return 2**++Re}const z=Object.freeze(Object.defineProperty({__proto__:null,boolean:p,booleanish:m,commaOrSpaceSeparated:S,commaSeparated:N,number:i,overloadedBoolean:te,spaceSeparated:g},Symbol.toStringTag,{value:"Module"})),q=Object.keys(z);class j extends v{constructor(t,l,e,o){let a=-1;if(super(t,l),le(this,"space",o),typeof e=="number")for(;++a<q.length;){const r=q[a];le(this,q[a],(e&z[r])===z[r])}}}j.prototype.defined=!0;function le(n,t,l){l&&(n[t]=l)}const Ie={}.hasOwnProperty;function E(n){const t={},l={};let e;for(e in n.properties)if(Ie.call(n.properties,e)){const o=n.properties[e],a=new j(e,n.transform(n.attributes||{},e),o,n.space);n.mustUseProperty&&n.mustUseProperty.includes(e)&&(a.mustUseProperty=!0),t[e]=a,l[M(e)]=e,l[M(a.attribute)]=e}return new D(t,l,n.space)}const oe=E({space:"xlink",transform(n,t){return"xlink:"+t.slice(5).toLowerCase()},properties:{xLinkActuate:null,xLinkArcRole:null,xLinkHref:null,xLinkRole:null,xLinkShow:null,xLinkTitle:null,xLinkType:null}}),re=E({space:"xml",transform(n,t){return"xml:"+t.slice(3).toLowerCase()},properties:{xmlLang:null,xmlBase:null,xmlSpace:null}});function ae(n,t){return t in n?n[t]:t}function ie(n,t){return ae(n,t.toLowerCase())}const se=E({space:"xmlns",attributes:{xmlnsxlink:"xmlns:xlink"},transform:ie,properties:{xmlns:null,xmlnsXLink:null}}),ue=E({transform(n,t){return t==="role"?t:"aria-"+t.slice(4).toLowerCase()},properties:{ariaActiveDescendant:null,ariaAtomic:m,ariaAutoComplete:null,ariaBusy:m,ariaChecked:m,ariaColCount:i,ariaColIndex:i,ariaColSpan:i,ariaControls:g,ariaCurrent:null,ariaDescribedBy:g,ariaDetails:null,ariaDisabled:m,ariaDropEffect:g,ariaErrorMessage:null,ariaExpanded:m,ariaFlowTo:g,ariaGrabbed:m,ariaHasPopup:null,ariaHidden:m,ariaInvalid:null,ariaKeyShortcuts:null,ariaLabel:null,ariaLabelledBy:g,ariaLevel:i,ariaLive:null,ariaModal:m,ariaMultiLine:m,ariaMultiSelectable:m,ariaOrientation:null,ariaOwns:g,ariaPlaceholder:null,ariaPosInSet:i,ariaPressed:m,ariaReadOnly:m,ariaRelevant:null,ariaRequired:m,ariaRoleDescription:g,ariaRowCount:i,ariaRowIndex:i,ariaRowSpan:i,ariaSelected:m,ariaSetSize:i,ariaSort:null,ariaValueMax:i,ariaValueMin:i,ariaValueNow:i,ariaValueText:null,role:null}}),Be=E({space:"html",attributes:{acceptcharset:"accept-charset",classname:"class",htmlfor:"for",httpequiv:"http-equiv"},transform:ie,mustUseProperty:["checked","multiple","muted","selected"],properties:{abbr:null,accept:N,acceptCharset:g,accessKey:g,action:null,allow:null,allowFullScreen:p,allowPaymentRequest:p,allowUserMedia:p,alt:null,as:null,async:p,autoCapitalize:null,autoComplete:g,autoFocus:p,autoPlay:p,capture:p,charSet:null,checked:p,cite:null,className:g,cols:i,colSpan:null,content:null,contentEditable:m,controls:p,controlsList:g,coords:i|N,crossOrigin:null,data:null,dateTime:null,decoding:null,default:p,defer:p,dir:null,dirName:null,disabled:p,download:te,draggable:m,encType:null,enterKeyHint:null,form:null,formAction:null,formEncType:null,formMethod:null,formNoValidate:p,formTarget:null,headers:g,height:i,hidden:p,high:i,href:null,hrefLang:null,htmlFor:g,httpEquiv:g,id:null,imageSizes:null,imageSrcSet:null,inputMode:null,integrity:null,is:null,isMap:p,itemId:null,itemProp:g,itemRef:g,itemScope:p,itemType:g,kind:null,label:null,lang:null,language:null,list:null,loading:null,loop:p,low:i,manifest:null,max:null,maxLength:i,media:null,method:null,min:null,minLength:i,multiple:p,muted:p,name:null,nonce:null,noModule:p,noValidate:p,onAbort:null,onAfterPrint:null,onAuxClick:null,onBeforeMatch:null,onBeforePrint:null,onBeforeUnload:null,onBlur:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onContextLost:null,onContextMenu:null,onContextRestored:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnded:null,onError:null,onFocus:null,onFormData:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLanguageChange:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadEnd:null,onLoadStart:null,onMessage:null,onMessageError:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRejectionHandled:null,onReset:null,onResize:null,onScroll:null,onScrollEnd:null,onSecurityPolicyViolation:null,onSeeked:null,onSeeking:null,onSelect:null,onSlotChange:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnhandledRejection:null,onUnload:null,onVolumeChange:null,onWaiting:null,onWheel:null,open:p,optimum:i,pattern:null,ping:g,placeholder:null,playsInline:p,poster:null,preload:null,readOnly:p,referrerPolicy:null,rel:g,required:p,reversed:p,rows:i,rowSpan:i,sandbox:g,scope:null,scoped:p,seamless:p,selected:p,shape:null,size:i,sizes:null,slot:null,span:i,spellCheck:m,src:null,srcDoc:null,srcLang:null,srcSet:null,start:i,step:null,style:null,tabIndex:i,target:null,title:null,translate:null,type:null,typeMustMatch:p,useMap:null,value:m,width:i,wrap:null,align:null,aLink:null,archive:g,axis:null,background:null,bgColor:null,border:i,borderColor:null,bottomMargin:i,cellPadding:null,cellSpacing:null,char:null,charOff:null,classId:null,clear:null,code:null,codeBase:null,codeType:null,color:null,compact:p,declare:p,event:null,face:null,frame:null,frameBorder:null,hSpace:i,leftMargin:i,link:null,longDesc:null,lowSrc:null,marginHeight:i,marginWidth:i,noResize:p,noHref:p,noShade:p,noWrap:p,object:null,profile:null,prompt:null,rev:null,rightMargin:i,rules:null,scheme:null,scrolling:m,standby:null,summary:null,text:null,topMargin:i,valueType:null,version:null,vAlign:null,vLink:null,vSpace:i,allowTransparency:null,autoCorrect:null,autoSave:null,disablePictureInPicture:p,disableRemotePlayback:p,prefix:null,property:null,results:i,security:null,unselectable:null}}),_e=E({space:"svg",attributes:{accentHeight:"accent-height",alignmentBaseline:"alignment-baseline",arabicForm:"arabic-form",baselineShift:"baseline-shift",capHeight:"cap-height",className:"class",clipPath:"clip-path",clipRule:"clip-rule",colorInterpolation:"color-interpolation",colorInterpolationFilters:"color-interpolation-filters",colorProfile:"color-profile",colorRendering:"color-rendering",crossOrigin:"crossorigin",dataType:"datatype",dominantBaseline:"dominant-baseline",enableBackground:"enable-background",fillOpacity:"fill-opacity",fillRule:"fill-rule",floodColor:"flood-color",floodOpacity:"flood-opacity",fontFamily:"font-family",fontSize:"font-size",fontSizeAdjust:"font-size-adjust",fontStretch:"font-stretch",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",glyphName:"glyph-name",glyphOrientationHorizontal:"glyph-orientation-horizontal",glyphOrientationVertical:"glyph-orientation-vertical",hrefLang:"hreflang",horizAdvX:"horiz-adv-x",horizOriginX:"horiz-origin-x",horizOriginY:"horiz-origin-y",imageRendering:"image-rendering",letterSpacing:"letter-spacing",lightingColor:"lighting-color",markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",navDown:"nav-down",navDownLeft:"nav-down-left",navDownRight:"nav-down-right",navLeft:"nav-left",navNext:"nav-next",navPrev:"nav-prev",navRight:"nav-right",navUp:"nav-up",navUpLeft:"nav-up-left",navUpRight:"nav-up-right",onAbort:"onabort",onActivate:"onactivate",onAfterPrint:"onafterprint",onBeforePrint:"onbeforeprint",onBegin:"onbegin",onCancel:"oncancel",onCanPlay:"oncanplay",onCanPlayThrough:"oncanplaythrough",onChange:"onchange",onClick:"onclick",onClose:"onclose",onCopy:"oncopy",onCueChange:"oncuechange",onCut:"oncut",onDblClick:"ondblclick",onDrag:"ondrag",onDragEnd:"ondragend",onDragEnter:"ondragenter",onDragExit:"ondragexit",onDragLeave:"ondragleave",onDragOver:"ondragover",onDragStart:"ondragstart",onDrop:"ondrop",onDurationChange:"ondurationchange",onEmptied:"onemptied",onEnd:"onend",onEnded:"onended",onError:"onerror",onFocus:"onfocus",onFocusIn:"onfocusin",onFocusOut:"onfocusout",onHashChange:"onhashchange",onInput:"oninput",onInvalid:"oninvalid",onKeyDown:"onkeydown",onKeyPress:"onkeypress",onKeyUp:"onkeyup",onLoad:"onload",onLoadedData:"onloadeddata",onLoadedMetadata:"onloadedmetadata",onLoadStart:"onloadstart",onMessage:"onmessage",onMouseDown:"onmousedown",onMouseEnter:"onmouseenter",onMouseLeave:"onmouseleave",onMouseMove:"onmousemove",onMouseOut:"onmouseout",onMouseOver:"onmouseover",onMouseUp:"onmouseup",onMouseWheel:"onmousewheel",onOffline:"onoffline",onOnline:"ononline",onPageHide:"onpagehide",onPageShow:"onpageshow",onPaste:"onpaste",onPause:"onpause",onPlay:"onplay",onPlaying:"onplaying",onPopState:"onpopstate",onProgress:"onprogress",onRateChange:"onratechange",onRepeat:"onrepeat",onReset:"onreset",onResize:"onresize",onScroll:"onscroll",onSeeked:"onseeked",onSeeking:"onseeking",onSelect:"onselect",onShow:"onshow",onStalled:"onstalled",onStorage:"onstorage",onSubmit:"onsubmit",onSuspend:"onsuspend",onTimeUpdate:"ontimeupdate",onToggle:"ontoggle",onUnload:"onunload",onVolumeChange:"onvolumechange",onWaiting:"onwaiting",onZoom:"onzoom",overlinePosition:"overline-position",overlineThickness:"overline-thickness",paintOrder:"paint-order",panose1:"panose-1",pointerEvents:"pointer-events",referrerPolicy:"referrerpolicy",renderingIntent:"rendering-intent",shapeRendering:"shape-rendering",stopColor:"stop-color",stopOpacity:"stop-opacity",strikethroughPosition:"strikethrough-position",strikethroughThickness:"strikethrough-thickness",strokeDashArray:"stroke-dasharray",strokeDashOffset:"stroke-dashoffset",strokeLineCap:"stroke-linecap",strokeLineJoin:"stroke-linejoin",strokeMiterLimit:"stroke-miterlimit",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",tabIndex:"tabindex",textAnchor:"text-anchor",textDecoration:"text-decoration",textRendering:"text-rendering",typeOf:"typeof",underlinePosition:"underline-position",underlineThickness:"underline-thickness",unicodeBidi:"unicode-bidi",unicodeRange:"unicode-range",unitsPerEm:"units-per-em",vAlphabetic:"v-alphabetic",vHanging:"v-hanging",vIdeographic:"v-ideographic",vMathematical:"v-mathematical",vectorEffect:"vector-effect",vertAdvY:"vert-adv-y",vertOriginX:"vert-origin-x",vertOriginY:"vert-origin-y",wordSpacing:"word-spacing",writingMode:"writing-mode",xHeight:"x-height",playbackOrder:"playbackorder",timelineBegin:"timelinebegin"},transform:ae,properties:{about:S,accentHeight:i,accumulate:null,additive:null,alignmentBaseline:null,alphabetic:i,amplitude:i,arabicForm:null,ascent:i,attributeName:null,attributeType:null,azimuth:i,bandwidth:null,baselineShift:null,baseFrequency:null,baseProfile:null,bbox:null,begin:null,bias:i,by:null,calcMode:null,capHeight:i,className:g,clip:null,clipPath:null,clipPathUnits:null,clipRule:null,color:null,colorInterpolation:null,colorInterpolationFilters:null,colorProfile:null,colorRendering:null,content:null,contentScriptType:null,contentStyleType:null,crossOrigin:null,cursor:null,cx:null,cy:null,d:null,dataType:null,defaultAction:null,descent:i,diffuseConstant:i,direction:null,display:null,dur:null,divisor:i,dominantBaseline:null,download:p,dx:null,dy:null,edgeMode:null,editable:null,elevation:i,enableBackground:null,end:null,event:null,exponent:i,externalResourcesRequired:null,fill:null,fillOpacity:i,fillRule:null,filter:null,filterRes:null,filterUnits:null,floodColor:null,floodOpacity:null,focusable:null,focusHighlight:null,fontFamily:null,fontSize:null,fontSizeAdjust:null,fontStretch:null,fontStyle:null,fontVariant:null,fontWeight:null,format:null,fr:null,from:null,fx:null,fy:null,g1:N,g2:N,glyphName:N,glyphOrientationHorizontal:null,glyphOrientationVertical:null,glyphRef:null,gradientTransform:null,gradientUnits:null,handler:null,hanging:i,hatchContentUnits:null,hatchUnits:null,height:null,href:null,hrefLang:null,horizAdvX:i,horizOriginX:i,horizOriginY:i,id:null,ideographic:i,imageRendering:null,initialVisibility:null,in:null,in2:null,intercept:i,k:i,k1:i,k2:i,k3:i,k4:i,kernelMatrix:S,kernelUnitLength:null,keyPoints:null,keySplines:null,keyTimes:null,kerning:null,lang:null,lengthAdjust:null,letterSpacing:null,lightingColor:null,limitingConeAngle:i,local:null,markerEnd:null,markerMid:null,markerStart:null,markerHeight:null,markerUnits:null,markerWidth:null,mask:null,maskContentUnits:null,maskUnits:null,mathematical:null,max:null,media:null,mediaCharacterEncoding:null,mediaContentEncodings:null,mediaSize:i,mediaTime:null,method:null,min:null,mode:null,name:null,navDown:null,navDownLeft:null,navDownRight:null,navLeft:null,navNext:null,navPrev:null,navRight:null,navUp:null,navUpLeft:null,navUpRight:null,numOctaves:null,observer:null,offset:null,onAbort:null,onActivate:null,onAfterPrint:null,onBeforePrint:null,onBegin:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnd:null,onEnded:null,onError:null,onFocus:null,onFocusIn:null,onFocusOut:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadStart:null,onMessage:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onMouseWheel:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRepeat:null,onReset:null,onResize:null,onScroll:null,onSeeked:null,onSeeking:null,onSelect:null,onShow:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnload:null,onVolumeChange:null,onWaiting:null,onZoom:null,opacity:null,operator:null,order:null,orient:null,orientation:null,origin:null,overflow:null,overlay:null,overlinePosition:i,overlineThickness:i,paintOrder:null,panose1:null,path:null,pathLength:i,patternContentUnits:null,patternTransform:null,patternUnits:null,phase:null,ping:g,pitch:null,playbackOrder:null,pointerEvents:null,points:null,pointsAtX:i,pointsAtY:i,pointsAtZ:i,preserveAlpha:null,preserveAspectRatio:null,primitiveUnits:null,propagate:null,property:S,r:null,radius:null,referrerPolicy:null,refX:null,refY:null,rel:S,rev:S,renderingIntent:null,repeatCount:null,repeatDur:null,requiredExtensions:S,requiredFeatures:S,requiredFonts:S,requiredFormats:S,resource:null,restart:null,result:null,rotate:null,rx:null,ry:null,scale:null,seed:null,shapeRendering:null,side:null,slope:null,snapshotTime:null,specularConstant:i,specularExponent:i,spreadMethod:null,spacing:null,startOffset:null,stdDeviation:null,stemh:null,stemv:null,stitchTiles:null,stopColor:null,stopOpacity:null,strikethroughPosition:i,strikethroughThickness:i,string:null,stroke:null,strokeDashArray:S,strokeDashOffset:null,strokeLineCap:null,strokeLineJoin:null,strokeMiterLimit:i,strokeOpacity:i,strokeWidth:null,style:null,surfaceScale:i,syncBehavior:null,syncBehaviorDefault:null,syncMaster:null,syncTolerance:null,syncToleranceDefault:null,systemLanguage:S,tabIndex:i,tableValues:null,target:null,targetX:i,targetY:i,textAnchor:null,textDecoration:null,textRendering:null,textLength:null,timelineBegin:null,title:null,transformBehavior:null,type:null,typeOf:S,to:null,transform:null,u1:null,u2:null,underlinePosition:i,underlineThickness:i,unicode:null,unicodeBidi:null,unicodeRange:null,unitsPerEm:i,values:null,vAlphabetic:i,vMathematical:i,vectorEffect:null,vHanging:i,vIdeographic:i,version:null,vertAdvY:i,vertOriginX:i,vertOriginY:i,viewBox:null,viewTarget:null,visibility:null,width:null,widths:null,wordSpacing:null,writingMode:null,x:null,x1:null,x2:null,xChannelSelector:null,xHeight:i,y:null,y1:null,y2:null,yChannelSelector:null,z:null,zoomAndPan:null}}),Fe=/^data[-\w.:]+$/i,ce=/-[a-z]/g,Ue=/[A-Z]/g;function pe(n,t){const l=M(t);let e=t,o=v;if(l in n.normal)return n.property[n.normal[l]];if(l.length>4&&l.slice(0,4)==="data"&&Fe.test(t)){if(t.charAt(4)==="-"){const a=t.slice(5).replace(ce,qe);e="data"+a.charAt(0).toUpperCase()+a.slice(1)}else{const a=t.slice(4);if(!ce.test(a)){let r=a.replace(Ue,ze);r.charAt(0)!=="-"&&(r="-"+r),t="data"+r}}o=j}return new o(e,t)}function ze(n){return"-"+n.toLowerCase()}function qe(n){return n.charAt(1).toUpperCase()}const je=ne([re,oe,se,ue,Be],"html"),H=ne([re,oe,se,ue,_e],"svg"),de=/[#.]/g;function He(n,t){const l=n||"",e={};let o=0,a,r;for(;o<l.length;){de.lastIndex=o;const s=de.exec(l),u=l.slice(o,s?s.index:l.length);u&&(a?a==="#"?e.id=u:Array.isArray(e.className)?e.className.push(u):e.className=[u]:r=u,o+=u.length),s&&(a=s[0],o++)}return{type:"element",tagName:r||t||"div",properties:e,children:[]}}function ge(n){const t=String(n||"").trim();return t?t.split(/[ \t\n\r\f]+/g):[]}function $e(n){return n.join(" ").trim()}function me(n){const t=[],l=String(n||"");let e=l.indexOf(","),o=0,a=!1;for(;!a;){e===-1&&(e=l.length,a=!0);const r=l.slice(o,e).trim();(r||!a)&&t.push(r),o=e+1,e=l.indexOf(",",o)}return t}function Ge(n,t){const l=t||{};return(n[n.length-1]===""?[...n,""]:n).join((l.padRight?" ":"")+","+(l.padLeft===!1?"":" ")).trim()}const Ye=new Set(["menu","submit","reset","button"]),$={}.hasOwnProperty;function Ve(n,t,l){const e=l&&Ze(l);return function(a,r,...s){let u=-1,c;if(a==null)c={type:"root",children:[]},s.unshift(r);else if(c=He(a,t),c.tagName=c.tagName.toLowerCase(),e&&$.call(e,c.tagName)&&(c.tagName=e[c.tagName]),We(r,c.tagName)){let d;for(d in r)$.call(r,d)&&Ke(n,c.properties,d,r[d])}else s.unshift(r);for(;++u<s.length;)G(c.children,s[u]);return c.type==="element"&&c.tagName==="template"&&(c.content={type:"root",children:c.children},c.children=[]),c}}function We(n,t){return n==null||typeof n!="object"||Array.isArray(n)?!1:t==="input"||!n.type||typeof n.type!="string"?!0:"children"in n&&Array.isArray(n.children)?!1:t==="button"?Ye.has(n.type.toLowerCase()):!("value"in n)}function Ke(n,t,l,e){const o=pe(n,l);let a=-1,r;if(e!=null){if(typeof e=="number"){if(Number.isNaN(e))return;r=e}else typeof e=="boolean"?r=e:typeof e=="string"?o.spaceSeparated?r=ge(e):o.commaSeparated?r=me(e):o.commaOrSpaceSeparated?r=ge(me(e).join(" ")):r=fe(o,o.property,e):Array.isArray(e)?r=e.concat():r=o.property==="style"?Xe(e):String(e);if(Array.isArray(r)){const s=[];for(;++a<r.length;)s[a]=fe(o,o.property,r[a]);r=s}o.property==="className"&&Array.isArray(t.className)&&(r=t.className.concat(r)),t[o.property]=r}}function G(n,t){let l=-1;if(t!=null)if(typeof t=="string"||typeof t=="number")n.push({type:"text",value:String(t)});else if(Array.isArray(t))for(;++l<t.length;)G(n,t[l]);else if(typeof t=="object"&&"type"in t)t.type==="root"?G(n,t.children):n.push(t);else throw new Error("Expected node, nodes, or string, got `"+t+"`")}function fe(n,t,l){if(typeof l=="string"){if(n.number&&l&&!Number.isNaN(Number(l)))return Number(l);if((n.boolean||n.overloadedBoolean)&&(l===""||M(l)===M(t)))return!0}return l}function Xe(n){const t=[];let l;for(l in n)$.call(n,l)&&t.push([l,n[l]].join(": "));return t.join("; ")}function Ze(n){const t={};let l=-1;for(;++l<n.length;)t[n[l].toLowerCase()]=n[l];return t}const h=Ve(H,"g",["altGlyph","altGlyphDef","altGlyphItem","animateColor","animateMotion","animateTransform","clipPath","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","foreignObject","glyphRef","linearGradient","radialGradient","solidColor","textArea","textPath"]);async function Je(n){return typeof n=="string"?en(n):Qe(n)}async function Qe(n){if(typeof File>"u"||typeof FileReader>"u")throw new TypeError(`Cannot read "file" object of type ${typeof n} in a non-browser environment`);return new Promise((t,l)=>{const e=new FileReader;e.addEventListener("load",o,{once:!0}),e.addEventListener("error",a,{once:!0}),e.readAsText(n);function o(){const r=e.result;e.removeEventListener("error",a),t({filename:n.name,contents:r})}function a(){e.removeEventListener("load",o),l(e.error)}})}async function en(n){const[t,l]=await Promise.all([import("node:fs/promises"),import("node:path")]).catch(()=>{throw new TypeError("Cannot read a file path string in a non-Node.js environment")}),e=l.basename(n),o=await t.readFile(n,"utf8");return{filename:e,contents:o}}function nn(n){const t=n.filter(e=>e.parseTree.filetype===k.GERBER).map(e=>e.filename),l=b.identifyLayers(t);return Object.fromEntries(n.map(({id:e,filename:o,parseTree:a})=>{const r=a.filetype===k.DRILL?{type:b.TYPE_DRILL,side:b.SIDE_ALL}:l[o];return[e,r]}))}const A=({id:n})=>n,T=(n,t)=>l=>l.type===n&&(t===void 0||l.side===t);function tn(n){return n.filter(T(b.TYPE_OUTLINE)).map(A)[0]}function he(n){return n.filter(T(b.TYPE_DRILL)).map(A)}function Y(n,t){return{copper:t.filter(T(b.TYPE_COPPER,n)).map(A),solderMask:t.filter(T(b.TYPE_SOLDERMASK,n)).map(A),silkScreen:t.filter(T(b.TYPE_SILKSCREEN,n)).map(A),solderPaste:t.filter(T(b.TYPE_SOLDERPASTE,n)).map(A)}}function ln(n){const t=new Map,l=new Map;for(const o of n){const a=rn(o);t.set(a,o);for(const r of[o.start,o.end]){const s=R(r),u=l.get(s)??[];u.push(a),l.set(s,u)}}return Object.assign(Object.create(on),{segmentsById:t,segmentIdsByPointId:l}).walk()}const on={walk(){const n=[];for(;this.segmentsById.size>0;){const t=this.segmentIdsByPointId.keys().next().value,l=this.walkPath(t);if(l.length>0){const e=l[0],o=l[l.length-1],a=[e.start[0],e.start[1]],r=[o.end[0],o.end[1]];n.push({start:a,end:r,segments:l})}}return n},walkPath(n){const t=this.shiftNextSegment(n);if(t!==void 0){const l=R(t.start),e=R(t.end),o=n===l?e:l;return[n===l?t:ye(t),...this.walkPath(o)]}return[]},shiftNextSegment(n){const t=this.shiftSegmentId(n);if(t!==void 0)return this.consumeSegment(t)??this.shiftNextSegment(n)},shiftSegmentId(n){const t=this.segmentIdsByPointId.get(n),l=t==null?void 0:t.shift();return(t==null?void 0:t.length)===0&&this.segmentIdsByPointId.delete(n),l},consumeSegment(n){const t=this.segmentsById.get(n);return this.segmentsById.delete(n),t}};function R(n){return`${n[0]},${n[1]}`}function rn(n){const{type:t}=n,[l,e]=an(n.start,n.end);return`${t}:${R(l)}:${R(e)}`}function an(n,t){return t[0]<n[0]?[t,n]:t[0]>n[0]?[n,t]:t[1]<n[1]?[t,n]:[n,t]}function ye(n){return{...n,start:n.end,end:n.start}}const sn=n=>({type:P.IMAGE_REGION,segments:n}),un=n=>({type:P.IMAGE_PATH,width:0,segments:n});function cn(n,t){const l=t**2,e=[...n],o=[],a=[];for(;e.length>0;){const r=e.shift();let s=be(r.end,r.start),u=r,c=r.start;if(s===0){o.push(r.segments);continue}for(const d of e)for(const x of[d.start,d.end]){const w=be(r.end,x);w<s&&(s=w,u=d,c=x)}if(s<=l){const d={type:P.LINE,start:r.end,end:c};if(r===u){o.push([...r.segments,d]);continue}const x=e.indexOf(u);x!==-1&&e.splice(x,1);const w=c===u.start?u.segments:u.segments.map(ye).reverse(),O=c===u.start?u.end:u.start;e.unshift({start:r.start,end:O,segments:[...r.segments,d,...w]})}else a.push(r.segments)}return[o.map(sn),a.map(un)]}function be(n,t){return n[0]!==t[0]||n[1]!==t[1]?(n[0]-t[0])**2+(n[1]-t[1])**2:0}const pn="missingOutlineLayer",dn="noPathsInOutlineLayer",gn="noClosedRegionsFound";function mn(n,t,l){const e=tn(n),o=e?t[e]:void 0,a=P.BoundingBox.sum(Object.values(t).map(({size:d})=>d));if(o===void 0)return{size:a,regions:[],openPaths:[],failureReason:pn};const r=o.children.filter(d=>d.type===P.IMAGE_PATH).flatMap(d=>d.segments);if(r.length===0)return{size:a,regions:[],openPaths:[],failureReason:dn};const s=ln(r),[u,c]=cn(s,l);return u.length===0?{size:a,regions:u,openPaths:c,failureReason:gn}:{regions:u,openPaths:c,size:P.BoundingBox.fromGraphics(u)}}function Se(n){const{regions:t,size:l,failureReason:e}=n,o=F.sizeToViewBox(l),a=t.flatMap(r=>r.segments);return e?{viewBox:o,failureReason:e}:{viewBox:o,path:F.renderGraphic({type:P.IMAGE_REGION,segments:a})}}const fn=["area","base","basefont","bgsound","br","col","command","embed","frame","hr","image","img","input","isindex","keygen","link","menuitem","meta","nextid","param","source","track","wbr"],ve={}.hasOwnProperty;function hn(n,t){const l=t||{};function e(o,...a){let r=e.invalid;const s=e.handlers;if(o&&ve.call(o,n)){const u=String(o[n]);r=ve.call(s,u)?s[u]:e.unknown}if(r)return r.call(this,o,...a)}return e.handlers=l.handlers||{},e.invalid=l.invalid,e.unknown=l.unknown,e}function yn(n,t){if(n=n.replace(t.subset?bn(t.subset):/["&'<>`]/g,e),t.subset||t.escapeOnly)return n;return n.replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,l).replace(/[\x01-\t\v\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,e);function l(o,a,r){return t.format((o.charCodeAt(0)-55296)*1024+o.charCodeAt(1)-56320+65536,r.charCodeAt(a+2),t)}function e(o,a,r){return t.format(o.charCodeAt(0),r.charCodeAt(a+1),t)}}function bn(n){const t=[];let l=-1;for(;++l<n.length;)t.push(n[l].replace(/[|\\{}()[\]^$+*?.]/g,"\\$&"));return new RegExp("(?:"+t.join("|")+")","g")}function Sn(n,t,l){const e="&#x"+n.toString(16).toUpperCase();return l&&t&&!/[\dA-Fa-f]/.test(String.fromCharCode(t))?e:e+";"}function vn(n,t,l){const e="&#"+String(n);return l&&t&&!/\d/.test(String.fromCharCode(t))?e:e+";"}const xn=["AElig","AMP","Aacute","Acirc","Agrave","Aring","Atilde","Auml","COPY","Ccedil","ETH","Eacute","Ecirc","Egrave","Euml","GT","Iacute","Icirc","Igrave","Iuml","LT","Ntilde","Oacute","Ocirc","Ograve","Oslash","Otilde","Ouml","QUOT","REG","THORN","Uacute","Ucirc","Ugrave","Uuml","Yacute","aacute","acirc","acute","aelig","agrave","amp","aring","atilde","auml","brvbar","ccedil","cedil","cent","copy","curren","deg","divide","eacute","ecirc","egrave","eth","euml","frac12","frac14","frac34","gt","iacute","icirc","iexcl","igrave","iquest","iuml","laquo","lt","macr","micro","middot","nbsp","not","ntilde","oacute","ocirc","ograve","ordf","ordm","oslash","otilde","ouml","para","plusmn","pound","quot","raquo","reg","sect","shy","sup1","sup2","sup3","szlig","thorn","times","uacute","ucirc","ugrave","uml","uuml","yacute","yen","yuml"],V={nbsp:" ",iexcl:"¡",cent:"¢",pound:"£",curren:"¤",yen:"¥",brvbar:"¦",sect:"§",uml:"¨",copy:"©",ordf:"ª",laquo:"«",not:"¬",shy:"­",reg:"®",macr:"¯",deg:"°",plusmn:"±",sup2:"²",sup3:"³",acute:"´",micro:"µ",para:"¶",middot:"·",cedil:"¸",sup1:"¹",ordm:"º",raquo:"»",frac14:"¼",frac12:"½",frac34:"¾",iquest:"¿",Agrave:"À",Aacute:"Á",Acirc:"Â",Atilde:"Ã",Auml:"Ä",Aring:"Å",AElig:"Æ",Ccedil:"Ç",Egrave:"È",Eacute:"É",Ecirc:"Ê",Euml:"Ë",Igrave:"Ì",Iacute:"Í",Icirc:"Î",Iuml:"Ï",ETH:"Ð",Ntilde:"Ñ",Ograve:"Ò",Oacute:"Ó",Ocirc:"Ô",Otilde:"Õ",Ouml:"Ö",times:"×",Oslash:"Ø",Ugrave:"Ù",Uacute:"Ú",Ucirc:"Û",Uuml:"Ü",Yacute:"Ý",THORN:"Þ",szlig:"ß",agrave:"à",aacute:"á",acirc:"â",atilde:"ã",auml:"ä",aring:"å",aelig:"æ",ccedil:"ç",egrave:"è",eacute:"é",ecirc:"ê",euml:"ë",igrave:"ì",iacute:"í",icirc:"î",iuml:"ï",eth:"ð",ntilde:"ñ",ograve:"ò",oacute:"ó",ocirc:"ô",otilde:"õ",ouml:"ö",divide:"÷",oslash:"ø",ugrave:"ù",uacute:"ú",ucirc:"û",uuml:"ü",yacute:"ý",thorn:"þ",yuml:"ÿ",fnof:"ƒ",Alpha:"Α",Beta:"Β",Gamma:"Γ",Delta:"Δ",Epsilon:"Ε",Zeta:"Ζ",Eta:"Η",Theta:"Θ",Iota:"Ι",Kappa:"Κ",Lambda:"Λ",Mu:"Μ",Nu:"Ν",Xi:"Ξ",Omicron:"Ο",Pi:"Π",Rho:"Ρ",Sigma:"Σ",Tau:"Τ",Upsilon:"Υ",Phi:"Φ",Chi:"Χ",Psi:"Ψ",Omega:"Ω",alpha:"α",beta:"β",gamma:"γ",delta:"δ",epsilon:"ε",zeta:"ζ",eta:"η",theta:"θ",iota:"ι",kappa:"κ",lambda:"λ",mu:"μ",nu:"ν",xi:"ξ",omicron:"ο",pi:"π",rho:"ρ",sigmaf:"ς",sigma:"σ",tau:"τ",upsilon:"υ",phi:"φ",chi:"χ",psi:"ψ",omega:"ω",thetasym:"ϑ",upsih:"ϒ",piv:"ϖ",bull:"•",hellip:"…",prime:"′",Prime:"″",oline:"‾",frasl:"⁄",weierp:"℘",image:"ℑ",real:"ℜ",trade:"™",alefsym:"ℵ",larr:"←",uarr:"↑",rarr:"→",darr:"↓",harr:"↔",crarr:"↵",lArr:"⇐",uArr:"⇑",rArr:"⇒",dArr:"⇓",hArr:"⇔",forall:"∀",part:"∂",exist:"∃",empty:"∅",nabla:"∇",isin:"∈",notin:"∉",ni:"∋",prod:"∏",sum:"∑",minus:"−",lowast:"∗",radic:"√",prop:"∝",infin:"∞",ang:"∠",and:"∧",or:"∨",cap:"∩",cup:"∪",int:"∫",there4:"∴",sim:"∼",cong:"≅",asymp:"≈",ne:"≠",equiv:"≡",le:"≤",ge:"≥",sub:"⊂",sup:"⊃",nsub:"⊄",sube:"⊆",supe:"⊇",oplus:"⊕",otimes:"⊗",perp:"⊥",sdot:"⋅",lceil:"⌈",rceil:"⌉",lfloor:"⌊",rfloor:"⌋",lang:"〈",rang:"〉",loz:"◊",spades:"♠",clubs:"♣",hearts:"♥",diams:"♦",quot:'"',amp:"&",lt:"<",gt:">",OElig:"Œ",oelig:"œ",Scaron:"Š",scaron:"š",Yuml:"Ÿ",circ:"ˆ",tilde:"˜",ensp:" ",emsp:" ",thinsp:" ",zwnj:"‌",zwj:"‍",lrm:"‎",rlm:"‏",ndash:"–",mdash:"—",lsquo:"‘",rsquo:"’",sbquo:"‚",ldquo:"“",rdquo:"”",bdquo:"„",dagger:"†",Dagger:"‡",permil:"‰",lsaquo:"‹",rsaquo:"›",euro:"€"},wn=["cent","copy","divide","gt","lt","not","para","times"],xe={}.hasOwnProperty,W={};let B;for(B in V)xe.call(V,B)&&(W[V[B]]=B);function Pn(n,t,l,e){const o=String.fromCharCode(n);if(xe.call(W,o)){const a=W[o],r="&"+a;return l&&xn.includes(a)&&!wn.includes(a)&&(!e||t&&t!==61&&/[^\da-z]/i.test(String.fromCharCode(t)))?r:r+";"}return""}function kn(n,t,l){let e=Sn(n,t,l.omitOptionalSemicolons),o;if((l.useNamedReferences||l.useShortestReferences)&&(o=Pn(n,t,l.omitOptionalSemicolons,l.attribute)),(l.useShortestReferences||!o)&&l.useShortestReferences){const a=vn(n,t,l.omitOptionalSemicolons);a.length<e.length&&(e=a)}return o&&(!l.useShortestReferences||o.length<e.length)?o:e}function L(n,t){return yn(n,Object.assign({format:kn},t))}function Cn(n,t,l,e){return e.settings.bogusComments?"<?"+L(n.value,Object.assign({},e.settings.characterReferences,{subset:[">"]}))+">":"<!--"+n.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g,o)+"-->";function o(a){return L(a,Object.assign({},e.settings.characterReferences,{subset:["<",">"]}))}}function On(n,t,l,e){return"<!"+(e.settings.upperDoctype?"DOCTYPE":"doctype")+(e.settings.tightDoctype?"":" ")+"html>"}function we(n,t){const l=String(n);if(typeof t!="string")throw new TypeError("Expected character");let e=0,o=l.indexOf(t);for(;o!==-1;)e++,o=l.indexOf(t,o+t.length);return e}function K(n){const t=n&&typeof n=="object"&&n.type==="text"?n.value||"":n;return typeof t=="string"&&t.replace(/[ \t\n\f\r]/g,"")===""}const f=ke(1),Pe=ke(-1);function ke(n){return t;function t(l,e,o){const a=l?l.children:[];let r=(e||0)+n,s=a&&a[r];if(!o)for(;s&&K(s);)r+=n,s=a[r];return s}}const Nn={}.hasOwnProperty;function Ce(n){return t;function t(l,e,o){return Nn.call(n,l.tagName)&&n[l.tagName](l,e,o)}}const X=Ce({html:En,head:Z,body:An,p:Tn,li:Ln,dt:Dn,dd:Mn,rt:Oe,rp:Oe,optgroup:Rn,option:In,menuitem:Bn,colgroup:Z,caption:Z,thead:_n,tbody:Fn,tfoot:Un,tr:zn,td:Ne,th:Ne});function Z(n,t,l){const e=f(l,t,!0);return!e||e.type!=="comment"&&!(e.type==="text"&&K(e.value.charAt(0)))}function En(n,t,l){const e=f(l,t);return!e||e.type!=="comment"}function An(n,t,l){const e=f(l,t);return!e||e.type!=="comment"}function Tn(n,t,l){const e=f(l,t);return e?e.type==="element"&&(e.tagName==="address"||e.tagName==="article"||e.tagName==="aside"||e.tagName==="blockquote"||e.tagName==="details"||e.tagName==="div"||e.tagName==="dl"||e.tagName==="fieldset"||e.tagName==="figcaption"||e.tagName==="figure"||e.tagName==="footer"||e.tagName==="form"||e.tagName==="h1"||e.tagName==="h2"||e.tagName==="h3"||e.tagName==="h4"||e.tagName==="h5"||e.tagName==="h6"||e.tagName==="header"||e.tagName==="hgroup"||e.tagName==="hr"||e.tagName==="main"||e.tagName==="menu"||e.tagName==="nav"||e.tagName==="ol"||e.tagName==="p"||e.tagName==="pre"||e.tagName==="section"||e.tagName==="table"||e.tagName==="ul"):!l||!(l.type==="element"&&(l.tagName==="a"||l.tagName==="audio"||l.tagName==="del"||l.tagName==="ins"||l.tagName==="map"||l.tagName==="noscript"||l.tagName==="video"))}function Ln(n,t,l){const e=f(l,t);return!e||e.type==="element"&&e.tagName==="li"}function Dn(n,t,l){const e=f(l,t);return e&&e.type==="element"&&(e.tagName==="dt"||e.tagName==="dd")}function Mn(n,t,l){const e=f(l,t);return!e||e.type==="element"&&(e.tagName==="dt"||e.tagName==="dd")}function Oe(n,t,l){const e=f(l,t);return!e||e.type==="element"&&(e.tagName==="rp"||e.tagName==="rt")}function Rn(n,t,l){const e=f(l,t);return!e||e.type==="element"&&e.tagName==="optgroup"}function In(n,t,l){const e=f(l,t);return!e||e.type==="element"&&(e.tagName==="option"||e.tagName==="optgroup")}function Bn(n,t,l){const e=f(l,t);return!e||e.type==="element"&&(e.tagName==="menuitem"||e.tagName==="hr"||e.tagName==="menu")}function _n(n,t,l){const e=f(l,t);return e&&e.type==="element"&&(e.tagName==="tbody"||e.tagName==="tfoot")}function Fn(n,t,l){const e=f(l,t);return!e||e.type==="element"&&(e.tagName==="tbody"||e.tagName==="tfoot")}function Un(n,t,l){return!f(l,t)}function zn(n,t,l){const e=f(l,t);return!e||e.type==="element"&&e.tagName==="tr"}function Ne(n,t,l){const e=f(l,t);return!e||e.type==="element"&&(e.tagName==="td"||e.tagName==="th")}const qn=Ce({html:jn,head:Hn,body:$n,colgroup:Gn,tbody:Yn});function jn(n){const t=f(n,-1);return!t||t.type!=="comment"}function Hn(n){const t=n.children,l=[];let e=-1;for(;++e<t.length;){const o=t[e];if(o.type==="element"&&(o.tagName==="title"||o.tagName==="base")){if(l.includes(o.tagName))return!1;l.push(o.tagName)}}return t.length>0}function $n(n){const t=f(n,-1,!0);return!t||t.type!=="comment"&&!(t.type==="text"&&K(t.value.charAt(0)))&&!(t.type==="element"&&(t.tagName==="meta"||t.tagName==="link"||t.tagName==="script"||t.tagName==="style"||t.tagName==="template"))}function Gn(n,t,l){const e=Pe(l,t),o=f(n,-1,!0);return l&&e&&e.type==="element"&&e.tagName==="colgroup"&&X(e,l.children.indexOf(e),l)?!1:o&&o.type==="element"&&o.tagName==="col"}function Yn(n,t,l){const e=Pe(l,t),o=f(n,-1);return l&&e&&e.type==="element"&&(e.tagName==="thead"||e.tagName==="tbody")&&X(e,l.children.indexOf(e),l)?!1:o&&o.type==="element"&&o.tagName==="tr"}const _={name:[[`	
\f\r &/=>`.split(""),`	
\f\r "&'/=>\``.split("")],[`\0	
\f\r "&'/<=>`.split(""),`\0	
\f\r "&'/<=>\``.split("")]],unquoted:[[`	
\f\r &>`.split(""),`\0	
\f\r "&'<=>\``.split("")],[`\0	
\f\r "&'<=>\``.split(""),`\0	
\f\r "&'<=>\``.split("")]],single:[["&'".split(""),"\"&'`".split("")],["\0&'".split(""),"\0\"&'`".split("")]],double:[['"&'.split(""),"\"&'`".split("")],['\0"&'.split(""),"\0\"&'`".split("")]]};function Vn(n,t,l,e){const o=e.schema,a=o.space==="svg"?!1:e.settings.omitOptionalTags;let r=o.space==="svg"?e.settings.closeEmptyElements:e.settings.voids.includes(n.tagName.toLowerCase());const s=[];let u;o.space==="html"&&n.tagName==="svg"&&(e.schema=H);const c=Wn(e,n.properties),d=e.all(o.space==="html"&&n.tagName==="template"?n.content:n);return e.schema=o,d&&(r=!1),(c||!a||!qn(n,t,l))&&(s.push("<",n.tagName,c?" "+c:""),r&&(o.space==="svg"||e.settings.closeSelfClosing)&&(u=c.charAt(c.length-1),(!e.settings.tightSelfClosing||u==="/"||u&&u!=='"'&&u!=="'")&&s.push(" "),s.push("/")),s.push(">")),s.push(d),!r&&(!a||!X(n,t,l))&&s.push("</"+n.tagName+">"),s.join("")}function Wn(n,t){const l=[];let e=-1,o;if(t){for(o in t)if(t[o]!==void 0&&t[o]!==null){const a=Kn(n,o,t[o]);a&&l.push(a)}}for(;++e<l.length;){const a=n.settings.tightAttributes?l[e].charAt(l[e].length-1):null;e!==l.length-1&&a!=='"'&&a!=="'"&&(l[e]+=" ")}return l.join("")}function Kn(n,t,l){const e=pe(n.schema,t),o=n.settings.allowParseErrors&&n.schema.space==="html"?0:1,a=n.settings.allowDangerousCharacters?0:1;let r=n.quote,s;if(e.overloadedBoolean&&(l===e.attribute||l==="")?l=!0:(e.boolean||e.overloadedBoolean&&typeof l!="string")&&(l=Boolean(l)),l==null||l===!1||typeof l=="number"&&Number.isNaN(l))return"";const u=L(e.attribute,Object.assign({},n.settings.characterReferences,{subset:_.name[o][a]}));return l===!0||(l=Array.isArray(l)?(e.commaSeparated?Ge:$e)(l,{padLeft:!n.settings.tightCommaSeparatedLists}):String(l),n.settings.collapseEmptyAttributes&&!l)?u:(n.settings.preferUnquoted&&(s=L(l,Object.assign({},n.settings.characterReferences,{subset:_.unquoted[o][a],attribute:!0}))),s!==l&&(n.settings.quoteSmart&&we(l,r)>we(l,n.alternative)&&(r=n.alternative),s=r+L(l,Object.assign({},n.settings.characterReferences,{subset:(r==="'"?_.single:_.double)[o][a],attribute:!0}))+r),u+(s&&"="+s))}function Ee(n,t,l,e){return l&&l.type==="element"&&(l.tagName==="script"||l.tagName==="style")?n.value:L(n.value,Object.assign({},e.settings.characterReferences,{subset:["<","&"]}))}function Xn(n,t,l,e){return e.settings.allowDangerousHtml?n.value:Ee(n,t,l,e)}function Zn(n,t,l,e){return e.all(n)}const Jn=hn("type",{invalid:Qn,unknown:et,handlers:{comment:Cn,doctype:On,element:Vn,raw:Xn,root:Zn,text:Ee}});function Qn(n){throw new Error("Expected node, not `"+n+"`")}function et(n){throw new Error("Cannot compile unknown node `"+n.type+"`")}function nt(n,t){const l=t||{},e=l.quote||'"',o=e==='"'?"'":'"';if(e!=='"'&&e!=="'")throw new Error("Invalid quote `"+e+"`, expected `'` or `\"`");return{one:tt,all:lt,settings:{omitOptionalTags:l.omitOptionalTags||!1,allowParseErrors:l.allowParseErrors||!1,allowDangerousCharacters:l.allowDangerousCharacters||!1,quoteSmart:l.quoteSmart||!1,preferUnquoted:l.preferUnquoted||!1,tightAttributes:l.tightAttributes||!1,upperDoctype:l.upperDoctype||!1,tightDoctype:l.tightDoctype||!1,bogusComments:l.bogusComments||!1,tightCommaSeparatedLists:l.tightCommaSeparatedLists||!1,tightSelfClosing:l.tightSelfClosing||!1,collapseEmptyAttributes:l.collapseEmptyAttributes||!1,allowDangerousHtml:l.allowDangerousHtml||!1,voids:l.voids||fn,characterReferences:l.characterReferences||l.entities||{},closeSelfClosing:l.closeSelfClosing||!1,closeEmptyElements:l.closeEmptyElements||!1},schema:l.space==="svg"?H:je,quote:e,alternative:o}.one(Array.isArray(n)?{type:"root",children:n}:n,void 0,void 0)}function tt(n,t,l){return Jn(n,t,l,this)}function lt(n){const t=[],l=n&&n.children||[];let e=-1;for(;++e<l.length;)t[e]=this.one(l[e],e,n);return t.join("")}function J(n){return nt(n,{space:"svg"})}async function ot(n){const t=n.map(rt),l=await Promise.all(t),e=nn(l),o=[],a={};for(const{id:r,filename:s,parseTree:u}of l){const{type:c,side:d}=e[r];o.push({id:r,filename:s,type:c,side:d}),a[r]=u}return{layers:o,parseTreesById:a}}async function rt(n){const t=ee.random(),{filename:l,contents:e}=await Je(n),o=De.parse(e);return{id:t,filename:l,parseTree:o}}function at(n){const{layers:t,parseTreesById:l}=n,e={};for(const{id:a}of t)e[a]=Me.plot(l[a]);const o=mn(t,e,.02);return{layers:t,plotTreesById:e,boardShape:o}}function it(n){const{layers:t,boardShape:l,plotTreesById:e}=n,o=Se(l),a={};for(const{id:r}of t)a[r]=I.render(e[r],o.viewBox);return{layers:t,rendersById:a,boardShapeRender:o}}function st(n){const{layers:t,rendersById:l,boardShapeRender:e}=n,{viewBox:o,path:a}=e,r=he(t),[s,u,c,d]=o,x={},w=O=>l[O].children;for(const O of[b.SIDE_TOP,b.SIDE_BOTTOM]){const{copper:ct,solderMask:pt,silkScreen:dt,solderPaste:gt}=Y(O,t),Q=ee.random(),Ae=`drill-${Q}`,Te=`resist-${Q}`,Le=`shape-${Q}`,mt=a?`url(#${Le})`:void 0,ft=O===b.SIDE_BOTTOM?`translate(${2*s+c},0) scale(-1,1)`:void 0;x[O]=h("svg",{...I.BASE_SVG_PROPS,...I.BASE_IMAGE_PROPS,viewBox:`${s} ${u} ${c} ${d}`},[h("defs",[h("mask",{id:Ae},[h("rect",{x:s,y:u,width:c,height:d,fill:"#fff"}),h("g",{color:"#000"},r.flatMap(w))]),h("mask",{id:Te},[h("rect",{x:s,y:u,width:c,height:d,fill:"#fff"}),h("g",{color:"#000"},pt.flatMap(w))]),a?h("clipPath",{id:Le},a):void 0]),h("g",{transform:ft,"clip-path":mt},[h("g",{mask:`url(#${Ae})`},[h("rect",{fill:"#666",x:s,y:u,width:c,height:d}),h("g",{color:"#c93"},ct.flatMap(w))]),h("g",{mask:`url(#${Te})`},[h("rect",{fill:"#004200",opacity:"0.8",x:s,y:u,width:c,height:d}),h("g",{color:"#fff"},dt.flatMap(w))]),h("g",{color:"#999"},gt.flatMap(w))])])}return x}function ut(n){const{layers:t,plotTreesById:l,boardShape:e}=n,{viewBox:o,path:a}=Se(e),r=Y(b.SIDE_TOP,t),s=Y(b.SIDE_BOTTOM,t),u=he(t),c={viewBox:o,svgFragment:a?J(a):void 0},d={};for(const{id:x}of t)d[x]=J(I.renderFragment(l[x]));return{layers:t,topLayers:r,bottomLayers:s,drillLayers:u,boardShapeRenderFragment:c,svgFragmentsById:d}}y.plot=at,y.read=ot,y.renderBoard=st,y.renderFragments=ut,y.renderLayers=it,y.stringifySvg=J,Object.defineProperty(y,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=tracespace-core.umd.cjs.map
