{"version":3,"file":"tracespace-xml-id.js","sources":["../src/index.ts"],"sourcesContent":["// Tracespace xml id utilities\n\n// subset of characters that are XML ID, CSS identifier, and URL friendly\nconst START_CHAR = '_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'\nconst CHAR = `-0123456789${START_CHAR}`\nconst REPLACE_RE = new RegExp(`^[^${START_CHAR}]|[^\\\\${CHAR}]`, 'g')\n\nconst DEFAULT_RANDOM_LENGTH = 12\n\nexport function random(length: number = DEFAULT_RANDOM_LENGTH): string {\n  length = length || DEFAULT_RANDOM_LENGTH\n  return _getRandomString(1, START_CHAR) + _getRandomString(length - 1, CHAR)\n}\n\nexport function sanitize(source: string): string {\n  return source.replace(REPLACE_RE, '_')\n}\n\nexport function ensure(\n  maybeId: unknown,\n  length: number = DEFAULT_RANDOM_LENGTH\n): string {\n  return typeof maybeId === 'string' ? sanitize(maybeId) : random(length)\n}\n\nfunction _getRandomString(length: number, alphabet: string): string {\n  const abLength = alphabet.length\n  let result = ''\n\n  while (length > 0) {\n    length--\n    result += alphabet[Math.floor(Math.random() * abLength)]\n  }\n\n  return result\n}\n"],"names":["START_CHAR","CHAR","REPLACE_RE","DEFAULT_RANDOM_LENGTH","random","length","_getRandomString","sanitize","source","ensure","maybeId","alphabet","abLength","result"],"mappings":"AAGA,MAAMA,IAAa,yDACbC,IAAO,cAAcD,KACrBE,IAAa,IAAI,OAAO,MAAMF,UAAmBC,MAAS,GAAG,GAE7DE,IAAwB;AAEd,SAAAC,EAAOC,IAAiBF,GAA+B;AACrE,SAAAE,IAASA,KAAUF,GACZG,EAAiB,GAAGN,CAAU,IAAIM,EAAiBD,IAAS,GAAGJ,CAAI;AAC5E;AAEO,SAASM,EAASC,GAAwB;AACxC,SAAAA,EAAO,QAAQN,GAAY,GAAG;AACvC;AAEgB,SAAAO,EACdC,GACAL,IAAiBF,GACT;AACR,SAAO,OAAOO,KAAY,WAAWH,EAASG,CAAO,IAAIN,EAAOC,CAAM;AACxE;AAEA,SAASC,EAAiBD,GAAgBM,GAA0B;AAClE,QAAMC,IAAWD,EAAS;AAC1B,MAAIE,IAAS;AAEb,SAAOR,IAAS;AACd,IAAAA,KACAQ,KAAUF,EAAS,KAAK,MAAM,KAAK,OAAO,IAAIC,CAAQ,CAAC;AAGlD,SAAAC;AACT;"}