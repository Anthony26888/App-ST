{"version":3,"file":"tracespace-core.js","sources":["../../../node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/util/schema.js","../../../node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/util/merge.js","../../../node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/normalize.js","../../../node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/util/info.js","../../../node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/util/types.js","../../../node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/util/defined-info.js","../../../node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/util/create.js","../../../node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/xlink.js","../../../node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/xml.js","../../../node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/util/case-sensitive-transform.js","../../../node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/util/case-insensitive-transform.js","../../../node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/xmlns.js","../../../node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/aria.js","../../../node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/html.js","../../../node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/svg.js","../../../node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/find.js","../../../node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/index.js","../../../node_modules/.pnpm/hast-util-parse-selector@3.1.1/node_modules/hast-util-parse-selector/lib/index.js","../../../node_modules/.pnpm/space-separated-tokens@2.0.2/node_modules/space-separated-tokens/index.js","../../../node_modules/.pnpm/comma-separated-tokens@2.0.3/node_modules/comma-separated-tokens/index.js","../../../node_modules/.pnpm/hastscript@7.2.0/node_modules/hastscript/lib/core.js","../../../node_modules/.pnpm/hastscript@7.2.0/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../../../node_modules/.pnpm/hastscript@7.2.0/node_modules/hastscript/lib/svg.js","../src/read-file.ts","../src/determine-layer-types.ts","../src/sort-layers.ts","../src/board-shape/walk-paths.ts","../src/board-shape/fill-gaps.ts","../src/board-shape/index.ts","../../../node_modules/.pnpm/html-void-elements@2.0.1/node_modules/html-void-elements/index.js","../../../node_modules/.pnpm/zwitch@2.0.4/node_modules/zwitch/index.js","../../../node_modules/.pnpm/stringify-entities@4.0.3/node_modules/stringify-entities/lib/core.js","../../../node_modules/.pnpm/stringify-entities@4.0.3/node_modules/stringify-entities/lib/util/to-hexadecimal.js","../../../node_modules/.pnpm/stringify-entities@4.0.3/node_modules/stringify-entities/lib/util/to-decimal.js","../../../node_modules/.pnpm/character-entities-legacy@3.0.0/node_modules/character-entities-legacy/index.js","../../../node_modules/.pnpm/character-entities-html4@2.1.0/node_modules/character-entities-html4/index.js","../../../node_modules/.pnpm/stringify-entities@4.0.3/node_modules/stringify-entities/lib/constant/dangerous.js","../../../node_modules/.pnpm/stringify-entities@4.0.3/node_modules/stringify-entities/lib/util/to-named.js","../../../node_modules/.pnpm/stringify-entities@4.0.3/node_modules/stringify-entities/lib/util/format-smart.js","../../../node_modules/.pnpm/stringify-entities@4.0.3/node_modules/stringify-entities/lib/index.js","../../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/handle/comment.js","../../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/handle/doctype.js","../../../node_modules/.pnpm/ccount@2.0.1/node_modules/ccount/index.js","../../../node_modules/.pnpm/hast-util-whitespace@2.0.1/node_modules/hast-util-whitespace/index.js","../../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/omission/util/siblings.js","../../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/omission/omission.js","../../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/omission/closing.js","../../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/omission/opening.js","../../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/handle/element.js","../../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/handle/text.js","../../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/handle/raw.js","../../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/handle/root.js","../../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/handle/index.js","../../../node_modules/.pnpm/hast-util-to-html@8.0.4/node_modules/hast-util-to-html/lib/index.js","../src/stringify-svg.ts","../src/index.ts"],"sourcesContent":["/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name.\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector.\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: fine.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any concrete `hast` node.\n * @typedef {Root | Element} HResult\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {string | number} HStyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, HStyleValue>} HStyle\n *   Supported value of a `style` prop.\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\n *   Primitive property value.\n * @typedef {Array<string | number>} HArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\n *   Acceptable value for element properties.\n *\n * @typedef {string | number | null | undefined} HPrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\n *   List of children.\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\n *   Acceptable child value.\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string | null} [selector]\n       * @param {HProperties | HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties | HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle | HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string | number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Content>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {HStyle} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n */\n\nimport {svg} from 'property-information'\nimport {core} from './core.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\n","export interface FileRead {\n  filename: string\n  contents: string\n}\n\nexport async function readFile(file: File | string): Promise<FileRead> {\n  return typeof file === 'string' ? readNodeFile(file) : readBrowserFile(file)\n}\n\nasync function readBrowserFile(file: File): Promise<FileRead> {\n  if (typeof File === 'undefined' || typeof FileReader === 'undefined') {\n    throw new TypeError(\n      `Cannot read \"file\" object of type ${typeof file} in a non-browser environment`\n    )\n  }\n\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n\n    reader.addEventListener('load', handleLoad, {once: true})\n    reader.addEventListener('error', handleError, {once: true})\n    reader.readAsText(file)\n\n    function handleLoad() {\n      const contents = reader.result as string\n      reader.removeEventListener('error', handleError)\n      resolve({filename: file.name, contents})\n    }\n\n    function handleError() {\n      reader.removeEventListener('load', handleLoad)\n      reject(reader.error)\n    }\n  })\n}\n\nasync function readNodeFile(file: string): Promise<FileRead> {\n  const [fs, path] = await Promise.all([\n    import('node:fs/promises'),\n    import('node:path'),\n  ]).catch(() => {\n    throw new TypeError(\n      'Cannot read a file path string in a non-Node.js environment'\n    )\n  })\n\n  const filename = path.basename(file)\n  const contents = await fs.readFile(file, 'utf8')\n\n  return {filename, contents}\n}\n","import {DRILL, GERBER} from '@tracespace/parser'\nimport {TYPE_DRILL, SIDE_ALL, identifyLayers} from '@tracespace/identify-layers'\n\nimport type {LayerIdentity} from '@tracespace/identify-layers'\nimport type {GerberTree} from '@tracespace/parser'\n\nexport interface ParsedLayer {\n  id: string\n  filename: string\n  parseTree: GerberTree\n}\n\nexport function determineLayerTypes(\n  layers: ParsedLayer[]\n): Record<string, LayerIdentity> {\n  const gerberFilenames = layers\n    .filter(layer => layer.parseTree.filetype === GERBER)\n    .map(layer => layer.filename)\n\n  const identitiesByFilename = identifyLayers(gerberFilenames)\n\n  return Object.fromEntries(\n    layers.map(({id, filename, parseTree}) => {\n      const layerIdentity: LayerIdentity =\n        parseTree.filetype === DRILL\n          ? {type: TYPE_DRILL, side: SIDE_ALL}\n          : identitiesByFilename[filename]\n\n      return [id, layerIdentity]\n    })\n  )\n}\n","import {\n  TYPE_COPPER,\n  TYPE_SOLDERMASK,\n  TYPE_SILKSCREEN,\n  TYPE_SOLDERPASTE,\n  TYPE_DRILL,\n  TYPE_OUTLINE,\n} from '@tracespace/identify-layers'\n\nimport type {\n  SIDE_TOP,\n  SIDE_BOTTOM,\n  GerberType,\n} from '@tracespace/identify-layers'\nimport type {Layer} from '.'\n\nexport interface SideLayers {\n  copper: string[]\n  solderMask: string[]\n  silkScreen: string[]\n  solderPaste: string[]\n}\n\nexport type Side = typeof SIDE_TOP | typeof SIDE_BOTTOM\n\nconst toId = ({id}: Layer) => id\nconst isType = (type: GerberType, side?: Side) => (layer: Layer) => {\n  return layer.type === type && (side === undefined || layer.side === side)\n}\n\nexport function getOutlineLayer(layers: Layer[]): string | undefined {\n  return layers.filter(isType(TYPE_OUTLINE)).map(toId)[0]\n}\n\nexport function getDrillLayers(layers: Layer[]): string[] {\n  return layers.filter(isType(TYPE_DRILL)).map(toId)\n}\n\nexport function getSideLayers(side: Side, layers: Layer[]): SideLayers {\n  return {\n    copper: layers.filter(isType(TYPE_COPPER, side)).map(toId),\n    solderMask: layers.filter(isType(TYPE_SOLDERMASK, side)).map(toId),\n    silkScreen: layers.filter(isType(TYPE_SILKSCREEN, side)).map(toId),\n    solderPaste: layers.filter(isType(TYPE_SOLDERPASTE, side)).map(toId),\n  }\n}\n","import type {PathSegment, Position, ArcPosition} from '@tracespace/plotter'\n\nexport interface PathWalk {\n  start: Position\n  end: Position\n  segments: PathSegment[]\n}\n\nexport function walkPaths(segments: PathSegment[]): PathWalk[] {\n  const segmentsById = new Map<string, PathSegment>()\n  const segmentIdsByPointId = new Map<string, string[]>()\n\n  for (const segment of segments) {\n    const segmentId = hashSegment(segment)\n\n    segmentsById.set(segmentId, segment)\n\n    for (const point of [segment.start, segment.end]) {\n      const pointId = hashPoint(point)\n      const pointSegmentIds = segmentIdsByPointId.get(pointId) ?? []\n\n      pointSegmentIds.push(segmentId)\n      segmentIdsByPointId.set(pointId, pointSegmentIds)\n    }\n  }\n\n  const pointMap: PointMap = Object.assign(Object.create(PointMapPrototype), {\n    segmentsById,\n    segmentIdsByPointId,\n  })\n\n  return pointMap.walk()\n}\n\ninterface PointMapProperties {\n  segmentsById: Map<string, PathSegment>\n  segmentIdsByPointId: Map<string, string[]>\n}\n\ninterface PointMapMethods {\n  walkPath(pointId: string): PathSegment[]\n  shiftNextSegment(pointId: string): PathSegment | undefined\n  shiftSegmentId(pointId: string): string | undefined\n  consumeSegment(segmentId: string): PathSegment | undefined\n  walk(): PathWalk[]\n}\n\ninterface PointMap extends PointMapProperties, PointMapMethods {}\n\nconst PointMapPrototype: PointMapMethods = {\n  walk(this: PointMap): PathWalk[] {\n    const results: PathWalk[] = []\n\n    while (this.segmentsById.size > 0) {\n      const pointId = this.segmentIdsByPointId.keys().next().value as string\n      const segments = this.walkPath(pointId)\n\n      if (segments.length > 0) {\n        const firstSegment = segments[0]\n        const lastSegment = segments[segments.length - 1]\n        const start: Position = [firstSegment.start[0], firstSegment.start[1]]\n        const end: Position = [lastSegment.end[0], lastSegment.end[1]]\n\n        results.push({start, end, segments})\n      }\n    }\n\n    return results\n  },\n\n  walkPath(this: PointMap, pointId: string): PathSegment[] {\n    const segment = this.shiftNextSegment(pointId)\n\n    if (segment !== undefined) {\n      const startId = hashPoint(segment.start)\n      const endId = hashPoint(segment.end)\n      const nextPointId = pointId === startId ? endId : startId\n\n      return [\n        pointId === startId ? segment : reverseSegment(segment),\n        ...this.walkPath(nextPointId),\n      ]\n    }\n\n    return []\n  },\n\n  shiftNextSegment(this: PointMap, pointId: string): PathSegment | undefined {\n    const segmentId = this.shiftSegmentId(pointId)\n\n    if (segmentId === undefined) {\n      return undefined\n    }\n\n    return this.consumeSegment(segmentId) ?? this.shiftNextSegment(pointId)\n  },\n\n  shiftSegmentId(this: PointMap, pointId: string): string | undefined {\n    const segmentIds = this.segmentIdsByPointId.get(pointId)\n    const nextId = segmentIds?.shift()\n\n    if (segmentIds?.length === 0) {\n      this.segmentIdsByPointId.delete(pointId)\n    }\n\n    return nextId\n  },\n\n  consumeSegment(this: PointMap, segmentId: string): PathSegment | undefined {\n    const segment = this.segmentsById.get(segmentId)\n    this.segmentsById.delete(segmentId)\n    return segment\n  },\n}\n\nfunction hashPoint(point: Position | ArcPosition): string {\n  return `${point[0]},${point[1]}`\n}\n\nfunction hashSegment(segment: PathSegment): string {\n  const {type} = segment\n  const [start, end] = sortPoints(segment.start, segment.end)\n\n  return `${type}:${hashPoint(start)}:${hashPoint(end)}`\n}\n\nfunction sortPoints<P extends Position | ArcPosition>(a: P, b: P): [P, P] {\n  if (b[0] < a[0]) return [b, a]\n  if (b[0] > a[0]) return [a, b]\n  if (b[1] < a[1]) return [b, a]\n  return [a, b]\n}\n\nexport function reverseSegment<S extends PathSegment>(segment: S): S {\n  return {...segment, start: segment.end, end: segment.start}\n}\n","import {LINE, IMAGE_REGION, IMAGE_PATH} from '@tracespace/plotter'\n\nimport type {\n  ImagePath,\n  ImageRegion,\n  PathSegment,\n  Position,\n} from '@tracespace/plotter'\nimport type {PathWalk} from './walk-paths'\n\nimport {reverseSegment} from './walk-paths'\n\nconst segmentsToRegion = (segments: PathSegment[]): ImageRegion => ({\n  type: IMAGE_REGION,\n  segments,\n})\n\nconst segmentsToPath = (segments: PathSegment[]): ImagePath => ({\n  type: IMAGE_PATH,\n  width: 0,\n  segments,\n})\n\nexport function fillGaps(\n  pathWalks: PathWalk[],\n  maximumGap: number\n): [regions: ImageRegion[], openPaths: ImagePath[]] {\n  const maximumSquareGap = maximumGap ** 2\n  const walksToCheck: PathWalk[] = [...pathWalks]\n  const closedPaths: PathSegment[][] = []\n  const openPaths: PathSegment[][] = []\n\n  while (walksToCheck.length > 0) {\n    const pathWalk = walksToCheck.shift()!\n    let smallestGap = squareDistance(pathWalk.end, pathWalk.start)\n    let nearestPathWalk = pathWalk\n    let nearestEndPoint = pathWalk.start\n\n    if (smallestGap === 0) {\n      closedPaths.push(pathWalk.segments)\n      continue\n    }\n\n    for (const otherWalk of walksToCheck) {\n      for (const otherEndPoint of [otherWalk.start, otherWalk.end]) {\n        const gap = squareDistance(pathWalk.end, otherEndPoint)\n        if (gap < smallestGap) {\n          smallestGap = gap\n          nearestPathWalk = otherWalk\n          nearestEndPoint = otherEndPoint\n        }\n      }\n    }\n\n    if (smallestGap <= maximumSquareGap) {\n      const gapFill: PathSegment = {\n        type: LINE,\n        start: pathWalk.end,\n        end: nearestEndPoint,\n      }\n\n      if (pathWalk === nearestPathWalk) {\n        closedPaths.push([...pathWalk.segments, gapFill])\n        continue\n      }\n\n      const nearestPathWalkIndex = walksToCheck.indexOf(nearestPathWalk)\n      if (nearestPathWalkIndex !== -1) {\n        walksToCheck.splice(nearestPathWalkIndex, 1)\n      }\n\n      const nearestPathSegments =\n        nearestEndPoint === nearestPathWalk.start\n          ? nearestPathWalk.segments\n          : nearestPathWalk.segments.map(reverseSegment).reverse()\n\n      const nearestPathEnd =\n        nearestEndPoint === nearestPathWalk.start\n          ? nearestPathWalk.end\n          : nearestPathWalk.start\n\n      walksToCheck.unshift({\n        start: pathWalk.start,\n        end: nearestPathEnd,\n        segments: [...pathWalk.segments, gapFill, ...nearestPathSegments],\n      })\n    } else {\n      openPaths.push(pathWalk.segments)\n    }\n  }\n\n  return [closedPaths.map(segmentsToRegion), openPaths.map(segmentsToPath)]\n}\n\nfunction squareDistance(a: Position, b: Position): number {\n  return a[0] !== b[0] || a[1] !== b[1]\n    ? (a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2\n    : 0\n}\n","import {IMAGE_PATH, IMAGE_REGION, BoundingBox} from '@tracespace/plotter'\nimport {renderGraphic, sizeToViewBox} from '@tracespace/renderer'\n\nimport type {\n  ImageTree,\n  ImagePath,\n  ImageRegion,\n  SizeEnvelope,\n} from '@tracespace/plotter'\nimport type {SvgElement, ViewBox} from '@tracespace/renderer'\n\nimport type {Layer} from '..'\nimport {getOutlineLayer} from '../sort-layers'\nimport {walkPaths} from './walk-paths'\nimport {fillGaps} from './fill-gaps'\n\nexport const MISSING_OUTLINE_LAYER = 'missingOutlineLayer'\nexport const NO_PATHS_IN_OUTLINE_LAYER = 'noPathsInOutlineLayer'\nexport const NO_CLOSED_REGIONS_FOUND = 'noClosedRegionsFound'\n\nexport interface BoardShape {\n  size: SizeEnvelope\n  regions: ImageRegion[]\n  openPaths: ImagePath[]\n  failureReason?: BoardShapeFailureReason\n}\n\nexport interface BoardShapeRender {\n  viewBox: ViewBox\n  path?: SvgElement\n  failureReason?: BoardShapeFailureReason\n}\n\nexport type BoardShapeFailureReason =\n  | typeof MISSING_OUTLINE_LAYER\n  | typeof NO_PATHS_IN_OUTLINE_LAYER\n  | typeof NO_CLOSED_REGIONS_FOUND\n\nexport function plotBoardShape(\n  layers: Layer[],\n  plotTreesById: Record<string, ImageTree>,\n  maximumGap: number\n): BoardShape {\n  const outlineId = getOutlineLayer(layers)\n  const outlinePlot = outlineId ? plotTreesById[outlineId] : undefined\n  const size = BoundingBox.sum(\n    Object.values(plotTreesById).map(({size}) => size)\n  )\n\n  if (outlinePlot === undefined) {\n    return {\n      size,\n      regions: [],\n      openPaths: [],\n      failureReason: MISSING_OUTLINE_LAYER,\n    }\n  }\n\n  const inputSegments = outlinePlot.children\n    .filter((node): node is ImagePath => node.type === IMAGE_PATH)\n    .flatMap(path => path.segments)\n\n  if (inputSegments.length === 0) {\n    return {\n      size,\n      regions: [],\n      openPaths: [],\n      failureReason: NO_PATHS_IN_OUTLINE_LAYER,\n    }\n  }\n\n  const allPaths = walkPaths(inputSegments)\n  const [regions, openPaths] = fillGaps(allPaths, maximumGap)\n\n  if (regions.length === 0) {\n    return {size, regions, openPaths, failureReason: NO_CLOSED_REGIONS_FOUND}\n  }\n\n  return {\n    regions,\n    openPaths,\n    size: BoundingBox.fromGraphics(regions),\n  }\n}\n\nexport function renderBoardShape(boardShape: BoardShape): BoardShapeRender {\n  const {regions, size, failureReason} = boardShape\n  const viewBox = sizeToViewBox(size)\n  const segments = regions.flatMap(r => r.segments)\n\n  return failureReason\n    ? {viewBox, failureReason}\n    : {viewBox, path: renderGraphic({type: IMAGE_REGION, segments})}\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !/\\d/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n","/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n","import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          /[^\\da-z]/i.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n","/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","/**\n * @typedef {import('../types.js').Comment} Comment\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {subset: ['>']})\n        ) +\n        '>'\n    : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: ['<', '>']\n      })\n    )\n  }\n}\n","/**\n * @typedef {import('../types.js').DocType} DocType\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize a doctype.\n *\n * @param {DocType} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('../../types.js').Parent} Parent\n * @typedef {import('../../types.js').Content} Content\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @param {Parent | null | undefined} parent\n   * @param {number | null | undefined} index\n   * @param {boolean | null | undefined} [includeWhitespace=false]\n   * @returns {Content}\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : []\n    let offset = (index || 0) + increment\n    let next = siblings && siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    return next\n  }\n}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Parent} Parent\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  html,\n  head: headOrColgroupOrCaption,\n  body,\n  p,\n  li,\n  dt,\n  dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup,\n  option,\n  menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead,\n  tbody,\n  tfoot,\n  tr,\n  td: cells,\n  th: cells\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n// eslint-disable-next-line complexity\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    next &&\n    next.type === 'element' &&\n    (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</menuitem>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction menuitem(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'menuitem' ||\n        next.tagName === 'hr' ||\n        next.tagName === 'menu'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    next &&\n    next.type === 'element' &&\n    (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n","/**\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Content} Content\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingBefore, siblingAfter} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  html,\n  head,\n  body,\n  colgroup,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  const children = node.children\n  /** @type {Array<string>} */\n  const seen = []\n  let index = -1\n\n  while (++index < children.length) {\n    const child = children[index]\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'title' || child.tagName === 'base')\n    ) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName)\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && head.type === 'element' && head.tagName === 'col'\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && head.type === 'element' && head.tagName === 'tr'\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n * @typedef {import('../types.js').PropertyValue} PropertyValue\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {opening} from '../omission/opening.js'\nimport {closing} from '../omission/closing.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'name' | 'unquoted' | 'single' | 'double', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\n// eslint-disable-next-line complexity\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attrs = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  if (content) selfClosing = false\n\n  if (attrs || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attrs ? ' ' + attrs : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attrs.charAt(attrs.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} props\n * @returns {string}\n */\nfunction serializeAttributes(state, props) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (props) {\n    for (key in props) {\n      if (props[key] !== undefined && props[key] !== null) {\n        const value = serializeAttribute(state, key, props[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : null\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {PropertyValue} value\n * @returns {string}\n */\n// eslint-disable-next-line complexity\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: constants.unquoted[x][y],\n        attribute: true\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Raw} Raw\n * @typedef {import('../types.js').Text} Text\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a text node.\n *\n * @param {Text | Raw} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: ['<', '&']\n        })\n      )\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Raw} Raw\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n","/**\n * @typedef {import('../types.js').Root} Root\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Node, index: number | undefined, parent: Parent | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node) {\n  // @ts-expect-error: `type` is defined.\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Content} Content\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').State} State\n */\n\nimport {html, svg} from 'property-information'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {handle} from './handle/index.js'\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Node | Array<Content>} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {string}\n *   Serialized HTML.\n */\n// eslint-disable-next-line complexity\nexport function toHtml(tree, options) {\n  const options_ = options || {}\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || options_.entities || {},\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Node} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parent | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || []\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n","import {toHtml} from 'hast-util-to-html'\n\nimport type {SvgElement} from '@tracespace/renderer'\n\nexport function stringifySvg(element: SvgElement): string {\n  return toHtml(element, {space: 'svg'})\n}\n","import {s} from 'hastscript'\n\nimport * as parser from '@tracespace/parser'\nimport * as plotter from '@tracespace/plotter'\nimport * as renderer from '@tracespace/renderer'\nimport {random as randomId} from '@tracespace/xml-id'\nimport {SIDE_TOP, SIDE_BOTTOM} from '@tracespace/identify-layers'\n\nimport type {GerberTree} from '@tracespace/parser'\nimport type {ImageTree} from '@tracespace/plotter'\nimport type {GerberType, GerberSide} from '@tracespace/identify-layers'\nimport type {SvgElement, ViewBox} from '@tracespace/renderer'\n\nimport {readFile} from './read-file'\nimport {determineLayerTypes} from './determine-layer-types'\nimport {plotBoardShape, renderBoardShape} from './board-shape'\nimport {getDrillLayers, getSideLayers} from './sort-layers'\nimport {stringifySvg} from './stringify-svg'\n\nimport type {ParsedLayer} from './determine-layer-types'\nimport type {BoardShape, BoardShapeRender} from './board-shape'\nimport type {Side, SideLayers} from './sort-layers'\n\nexport {stringifySvg} from './stringify-svg'\n\nexport interface Layer {\n  id: string\n  filename: string\n  type: GerberType\n  side: GerberSide\n}\n\nexport interface ReadResult {\n  layers: Layer[]\n  parseTreesById: Record<string, GerberTree>\n}\n\nexport interface PlotResult {\n  layers: Layer[]\n  plotTreesById: Record<string, ImageTree>\n  boardShape: BoardShape\n}\n\nexport interface RenderLayersResult {\n  layers: Layer[]\n  rendersById: Record<string, SvgElement>\n  boardShapeRender: BoardShapeRender\n}\n\nexport interface RenderBoardResult extends Record<Side, SvgElement> {}\n\nexport interface BoardShapeRenderFragment {\n  viewBox: ViewBox\n  svgFragment?: string\n}\n\nexport interface RenderFragmentsResult {\n  layers: Layer[]\n  topLayers: SideLayers\n  bottomLayers: SideLayers\n  drillLayers: string[]\n  boardShapeRenderFragment: BoardShapeRenderFragment\n  svgFragmentsById: Record<string, string>\n}\n\nexport async function read(files: File[] | string[]): Promise<ReadResult> {\n  const readTasks = files.map(readAndParseFile)\n  const parsedLayers = await Promise.all(readTasks)\n  const layerTypesById = determineLayerTypes(parsedLayers)\n  const layers: Layer[] = []\n  const parseTreesById: Record<string, GerberTree> = {}\n\n  for (const {id, filename, parseTree} of parsedLayers) {\n    const {type, side} = layerTypesById[id]\n\n    layers.push({id, filename, type, side})\n    parseTreesById[id] = parseTree\n  }\n\n  return {layers, parseTreesById}\n}\n\nasync function readAndParseFile(file: File | string): Promise<ParsedLayer> {\n  const id = randomId()\n  const {filename, contents} = await readFile(file)\n  const parseTree = parser.parse(contents)\n\n  return {id, filename, parseTree}\n}\n\nexport function plot(readResult: ReadResult): PlotResult {\n  const {layers, parseTreesById} = readResult\n  const plotTreesById: Record<string, ImageTree> = {}\n\n  for (const {id} of layers) {\n    plotTreesById[id] = plotter.plot(parseTreesById[id])\n  }\n\n  const boardShape = plotBoardShape(layers, plotTreesById, 0.02)\n\n  return {layers, plotTreesById, boardShape}\n}\n\nexport function renderLayers(plotResult: PlotResult): RenderLayersResult {\n  const {layers, boardShape, plotTreesById} = plotResult\n  const boardShapeRender = renderBoardShape(boardShape)\n  const rendersById: Record<string, SvgElement> = {}\n\n  for (const {id} of layers) {\n    rendersById[id] = renderer.render(\n      plotTreesById[id],\n      boardShapeRender.viewBox\n    )\n  }\n\n  return {layers, rendersById, boardShapeRender}\n}\n\nexport function renderBoard(\n  renderLayersResult: RenderLayersResult\n): RenderBoardResult {\n  const {layers, rendersById, boardShapeRender} = renderLayersResult\n  const {viewBox, path: shapeRender} = boardShapeRender\n  const drillLayers = getDrillLayers(layers)\n\n  const [x, y, width, height] = viewBox\n  const result: Partial<RenderBoardResult> = {}\n\n  const getRenderChildren = (id: string) => rendersById[id].children\n\n  for (const side of [SIDE_TOP, SIDE_BOTTOM] as const) {\n    const {\n      copper: copperLayers,\n      solderMask: resistLayers,\n      silkScreen: silkLayers,\n      solderPaste: pasteLayers,\n    } = getSideLayers(side, layers)\n\n    const id = randomId()\n    const drillMaskId = `drill-${id}`\n    const resistMaskId = `resist-${id}`\n    const shapeClipId = `shape-${id}`\n\n    const clipPath = shapeRender ? `url(#${shapeClipId})` : undefined\n    const transform =\n      side === SIDE_BOTTOM\n        ? `translate(${2 * x + width},0) scale(-1,1)`\n        : undefined\n\n    result[side] = s(\n      'svg',\n      {\n        ...renderer.BASE_SVG_PROPS,\n        ...renderer.BASE_IMAGE_PROPS,\n        viewBox: `${x} ${y} ${width} ${height}`,\n      },\n      [\n        s('defs', [\n          s('mask', {id: drillMaskId}, [\n            s('rect', {x, y, width, height, fill: '#fff'}),\n            s('g', {color: '#000'}, drillLayers.flatMap(getRenderChildren)),\n          ]),\n          s('mask', {id: resistMaskId}, [\n            s('rect', {x, y, width, height, fill: '#fff'}),\n            s('g', {color: '#000'}, resistLayers.flatMap(getRenderChildren)),\n          ]),\n          shapeRender\n            ? s('clipPath', {id: shapeClipId}, shapeRender)\n            : undefined,\n        ]),\n        s('g', {transform, 'clip-path': clipPath}, [\n          s('g', {mask: `url(#${drillMaskId})`}, [\n            s('rect', {fill: '#666', x, y, width, height}),\n            s('g', {color: '#c93'}, copperLayers.flatMap(getRenderChildren)),\n          ]),\n          s('g', {mask: `url(#${resistMaskId})`}, [\n            s('rect', {fill: '#004200', opacity: '0.8', x, y, width, height}),\n            s('g', {color: '#fff'}, silkLayers.flatMap(getRenderChildren)),\n          ]),\n          s('g', {color: '#999'}, pasteLayers.flatMap(getRenderChildren)),\n        ]),\n      ]\n    )\n  }\n\n  return result as RenderBoardResult\n}\n\nexport function renderFragments(plotResult: PlotResult): RenderFragmentsResult {\n  const {layers, plotTreesById, boardShape} = plotResult\n  const {viewBox, path: boardShapePath} = renderBoardShape(boardShape)\n  const topLayers = getSideLayers(SIDE_TOP, layers)\n  const bottomLayers = getSideLayers(SIDE_BOTTOM, layers)\n  const drillLayers = getDrillLayers(layers)\n  const boardShapeRenderFragment = {\n    viewBox,\n    svgFragment: boardShapePath ? stringifySvg(boardShapePath) : undefined,\n  }\n\n  const svgFragmentsById: Record<string, string> = {}\n\n  for (const {id} of layers) {\n    svgFragmentsById[id] = stringifySvg(\n      renderer.renderFragment(plotTreesById[id])\n    )\n  }\n\n  return {\n    layers,\n    topLayers,\n    bottomLayers,\n    drillLayers,\n    boardShapeRenderFragment,\n    svgFragmentsById,\n  }\n}\n"],"names":["Schema","property","normal","space","merge","definitions","index","normalize","value","Info","attribute","powers","boolean","increment","booleanish","overloadedBoolean","number","spaceSeparated","commaSeparated","commaOrSpaceSeparated","checks","types","DefinedInfo","mask","mark","check","values","key","own","create","definition","prop","info","xlink","_","xml","caseSensitiveTransform","attributes","caseInsensitiveTransform","xmlns","aria","html","svg","valid","dash","cap","find","schema","Type","rest","camelcase","dashes","kebab","$0","htmlBase","svgBase","search","parseSelector","selector","defaultTagName","props","start","previous","tagName","match","subvalue","parse","input","stringify","tokens","end","token","options","settings","buttonTypes","core","caseSensitive","adjust","createAdjustMap","properties","children","node","isProperties","addProperty","addChild","name","result","spaces","commas","parsePrimitive","style","finalResult","nodes","svgCaseSensitiveTagNames","s","readFile","file","readNodeFile","readBrowserFile","resolve","reject","reader","handleLoad","handleError","contents","fs","path","filename","determineLayerTypes","layers","gerberFilenames","layer","GERBER","identitiesByFilename","identifyLayers","id","parseTree","layerIdentity","DRILL","TYPE_DRILL","SIDE_ALL","toId","isType","type","side","getOutlineLayer","TYPE_OUTLINE","getDrillLayers","getSideLayers","TYPE_COPPER","TYPE_SOLDERMASK","TYPE_SILKSCREEN","TYPE_SOLDERPASTE","walkPaths","segments","segmentsById","segmentIdsByPointId","segment","segmentId","hashSegment","point","pointId","hashPoint","pointSegmentIds","PointMapPrototype","results","firstSegment","lastSegment","startId","endId","nextPointId","reverseSegment","segmentIds","nextId","sortPoints","a","b","segmentsToRegion","IMAGE_REGION","segmentsToPath","IMAGE_PATH","fillGaps","pathWalks","maximumGap","maximumSquareGap","walksToCheck","closedPaths","openPaths","pathWalk","smallestGap","squareDistance","nearestPathWalk","nearestEndPoint","otherWalk","otherEndPoint","gap","gapFill","LINE","nearestPathWalkIndex","nearestPathSegments","nearestPathEnd","MISSING_OUTLINE_LAYER","NO_PATHS_IN_OUTLINE_LAYER","NO_CLOSED_REGIONS_FOUND","plotBoardShape","plotTreesById","outlineId","outlinePlot","size","BoundingBox","inputSegments","allPaths","regions","renderBoardShape","boardShape","failureReason","viewBox","sizeToViewBox","renderGraphic","htmlVoidElements","zwitch","one","parameters","fn","handlers","charactersToExpression","basic","surrogate","pair","all","character","subset","groups","toHexadecimal","code","next","omit","toDecimal","characterEntitiesLegacy","characterEntitiesHtml4","dangerous","characters","toNamed","formatSmart","numeric","named","decimal","stringifyEntities","comment","_1","_2","state","encode","doctype","_3","ccount","source","count","whitespace","thing","siblingAfter","siblings","siblingBefore","sibling","parent","includeWhitespace","offset","omission","closing","headOrColgroupOrCaption","body","p","li","dt","dd","rubyElement","optgroup","option","menuitem","thead","tbody","tfoot","tr","cells","opening","head","colgroup","seen","child","constants","element","selfClosing","parts","last","attrs","serializeAttributes","content","serializeAttribute","x","y","quote","text","raw","root","handle","invalid","unknown","toHtml","tree","options_","alternative","stringifySvg","read","files","readTasks","readAndParseFile","parsedLayers","layerTypesById","parseTreesById","randomId","parser","plot","readResult","plotter","renderLayers","plotResult","boardShapeRender","rendersById","renderer","renderBoard","renderLayersResult","shapeRender","drillLayers","width","height","getRenderChildren","SIDE_TOP","SIDE_BOTTOM","copperLayers","resistLayers","silkLayers","pasteLayers","drillMaskId","resistMaskId","shapeClipId","clipPath","transform","renderFragments","boardShapePath","topLayers","bottomLayers","boardShapeRenderFragment","svgFragmentsById"],"mappings":"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"}