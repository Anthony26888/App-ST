{"version":3,"file":"tracespace-xml-id.umd.cjs","sources":["../src/index.ts"],"sourcesContent":["// Tracespace xml id utilities\n\n// subset of characters that are XML ID, CSS identifier, and URL friendly\nconst START_CHAR = '_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'\nconst CHAR = `-0123456789${START_CHAR}`\nconst REPLACE_RE = new RegExp(`^[^${START_CHAR}]|[^\\\\${CHAR}]`, 'g')\n\nconst DEFAULT_RANDOM_LENGTH = 12\n\nexport function random(length: number = DEFAULT_RANDOM_LENGTH): string {\n  length = length || DEFAULT_RANDOM_LENGTH\n  return _getRandomString(1, START_CHAR) + _getRandomString(length - 1, CHAR)\n}\n\nexport function sanitize(source: string): string {\n  return source.replace(REPLACE_RE, '_')\n}\n\nexport function ensure(\n  maybeId: unknown,\n  length: number = DEFAULT_RANDOM_LENGTH\n): string {\n  return typeof maybeId === 'string' ? sanitize(maybeId) : random(length)\n}\n\nfunction _getRandomString(length: number, alphabet: string): string {\n  const abLength = alphabet.length\n  let result = ''\n\n  while (length > 0) {\n    length--\n    result += alphabet[Math.floor(Math.random() * abLength)]\n  }\n\n  return result\n}\n"],"names":["START_CHAR","CHAR","REPLACE_RE","DEFAULT_RANDOM_LENGTH","random","length","_getRandomString","sanitize","source","ensure","maybeId","alphabet","abLength","result"],"mappings":"uOAGA,MAAMA,EAAa,wDACbC,EAAO,cAAcD,IACrBE,EAAa,IAAI,OAAO,MAAMF,UAAmBC,KAAS,GAAG,EAE7DE,EAAwB,GAEd,SAAAC,EAAOC,EAAiBF,EAA+B,CACrE,OAAAE,EAASA,GAAUF,EACZG,EAAiB,EAAGN,CAAU,EAAIM,EAAiBD,EAAS,EAAGJ,CAAI,CAC5E,CAEO,SAASM,EAASC,EAAwB,CACxC,OAAAA,EAAO,QAAQN,EAAY,GAAG,CACvC,CAEgB,SAAAO,EACdC,EACAL,EAAiBF,EACT,CACR,OAAO,OAAOO,GAAY,SAAWH,EAASG,CAAO,EAAIN,EAAOC,CAAM,CACxE,CAEA,SAASC,EAAiBD,EAAgBM,EAA0B,CAClE,MAAMC,EAAWD,EAAS,OAC1B,IAAIE,EAAS,GAEb,KAAOR,EAAS,GACdA,IACAQ,GAAUF,EAAS,KAAK,MAAM,KAAK,OAAO,EAAIC,CAAQ,CAAC,EAGlD,OAAAC,CACT"}