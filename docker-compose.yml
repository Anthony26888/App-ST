
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: app-st-backend
    ports:
      # Sử dụng biến từ file .env gốc, nếu không có thì dùng 3000
      - "${BACKEND_HOST_PORT:-3000}:3000"
    # ----> THAY ĐỔI Ở ĐÂY: Nạp biến từ file .env chung và file secrets <----
    env_file:
      - ./.env # Nạp file .env chung (ở gốc App-ST)
      - ./backend/.env.secrets # Nạp file bí mật của backend
    command: npm run dev
    volumes:
      # Mount code từ host vào container
      - ./backend:/app
      # ----> DÒNG NÀY RẤT QUAN TRỌNG <----
      # Ngăn node_modules trên host ghi đè node_modules trong container
      - /app/node_modules
    networks:
      - app-network
    # Không cần 'environment:' nếu các biến đã có trong env_file

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        # ----> THAY ĐỔI Ở ĐÂY: Truyền biến từ file .env gốc vào build <----
        # Docker Compose sẽ tự động thay thế các biến này bằng giá trị từ App-ST/.env
        VITE_API_URL: ${VITE_API_URL}
        VITE_SOCKET_URL: ${VITE_SOCKET_URL}
        VITE_DIGIKEY_CLIENT_ID: ${VITE_DIGIKEY_CLIENT_ID}
        # TUYỆT ĐỐI KHÔNG TRUYỀN BIẾN BÍ MẬT VÀO ĐÂY
    container_name: app-st-frontend
    ports:
      # Sử dụng biến từ file .env gốc, nếu không có thì dùng 8080
      - "${FRONTEND_HOST_PORT:-8080}:80"
    # Thường không cần env_file hoặc environment cho frontend runtime (Nginx)
    # vì các biến VITE_ đã được "bake" vào code JS lúc build.
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
